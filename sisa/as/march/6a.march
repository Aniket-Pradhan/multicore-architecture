; 6a Instruction Set Definitions for MAS Assembler
;
;[Info]
; 6a Architecture
; Copyright (C) 2004
; Departament d'Arquitectura de Computadors
; Universitat Politecnica de Catalunya

[Memories]

;NAME		DATASIZE		ALIGN		TOP			SECTIONS (separed with spaces)

RAM			1				2			65535		CODE DATA *

;[Data Sizes]
; char 1
; short 2
; int 2
; long 4

[Registers]

; NAME		INDEX		GROUP ( default = 0 )

R0			0
R1			1
R2			2
R3			3
R4			4
R5			5
R6			6
R7			7

AR			0			1
CR			1			1
SR			2			1

[Prototipes]

; NAME			PARAMS (no spaces)
; rr			rd:regg(0),ra:regg(0)
; rrr			rd:regg(0),ra:regg(0),rb:regg(0)
; ra2			rd:regg(0),src:addr(offs:natb(6),rb:regg(0),"$offs($rb)")
; a2r			src:addr(offs:natb(6),rb:regg(0),"$offs($rb)"),ra:regg(0)
; rri			rd:regg(0),ra:regg(0),inm:intb(6)

[Instructions]
; when implemented PATTERN will be PROTOTIPE
; when implemented CODE parameters will be names instead of indexes
; NAME			PATTERN			CODE (no spaces)

ADD 			R,R,R 			0000b|$1:3|$2:3|0:3|$3:3
SUB 			R,R,R			0000b|$1:3|$2:3|1:3|$3:3
ASR 			R,R			0000b|$1:3|$2:3|2:3|0:3
LSR 			R,R			0000b|$1:3|$2:3|3:3|0:3
AND			R,R,R			0000b|$1:3|$2:3|4:3|$3:3
OR			R,R,R			0000b|$1:3|$2:3|5:3|$3:3
NOT			R,R			0000b|$1:3|$2:3|6:3|0:3

CMPLT			R,R,R			0001b|$1:3|$2:3|0:3|$3:3
CMPLE			R,R,R			0001b|$1:3|$2:3|1:3|$3:3
CMPGT			R,R,R			0001b|$1:3|$2:3|2:3|$3:3
CMPGE			R,R,R			0001b|$1:3|$2:3|3:3|$3:3
CMPLTU			R,R,R			0001b|$1:3|$2:3|4:3|$3:3
CMPLEU			R,R,R			0001b|$1:3|$2:3|5:3|$3:3
CMPGTU			R,R,R			0001b|$1:3|$2:3|6:3|$3:3
CMPGEU			R,R,R			0001b|$1:3|$2:3|7:3|$3:3

IN			R,?			0010b|$1:3|0:3|%2:6
OUT			?,R			0011b|0:3|$2:3|%1:6

LD			R,?(?)			0100b|$1:3|$3:3|#2:6
ST			?(?),R			0101b|$3:3|$2:3|#1:6

BEQ			R,?			0110b|0:3|$1:3|&2:6
BNE			R,?			0110b|1:3|$1:3|&2:6

ADDI			R,R,?			0111b|$1:3|$2:3|#3:6

MUL 			R,R,R 			1000b|$1:3|$2:3|0:3|$3:3
DIV 			R,R,R 			1000b|$1:3|$2:3|1:3|$3:3
ADDF			R,R,R			1000b|$1:3|$2:3|4:3|$3:3
SUBF			R,R,R			1000b|$1:3|$2:3|5:3|$3:3
MULF			R,R,R			1000b|$1:3|$2:3|6:3|$3:3
DIVF			R,R,R			1000b|$1:3|$2:3|7:3|$3:3

GET			R,R			1010b|$1:3|$2:3|0:6
PUT			R,R			1011b|$1:3|$2:3|0:6

DI						1011b|100b|0:9
EI						1011b|101b|0:9
DE						1011b|110b|0:9
EE						1011b|111b|0:9

GII			R			1010b|$1:3|011000000b

LDB			R,?(?)			1100b|$1:3|$3:3|#2:6
STB			?(?),R			1101b|$3:3|$2:3|#1:6

JAL			R,R			1110b|000b|$2:3|$1:3|000b
JAL			R,?			1110b|000b|$2:3|$1:3|000b
JAR						1110b|111b|000b|000000b

MLO			R,?			1111b|$1:3|0b|%2:8
MHI			R,?			1111b|$1:3|1b|%2:8

HALT						1011011000000000b

; Instrucciones con patron generico necesarias en defs.6a
; para para poder usarlas con un registro temporal (expresion matematica)

LD_			?,?,?			0100b|$1:3|$3:3|#2:6
ST_			?,?,?			0101b|$3:3|$2:3|#1:6

LDB_			?,?,?			1100b|$1:3|$3:3|#2:6
STB_			?,?,?			1101b|$3:3|$2:3|#1:6

MLO_			?,?			1111b|$1:3|0b|%2:8
MHI_			?,?			1111b|$1:3|1b|%2:8
